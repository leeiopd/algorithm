'''
깊은 숲 속에 다람쥐 두 마리가 살고 있다. 숲에 겨울이 찾아오고 있다. 다람쥐들은 겨울잠을 자기 위해서 도토리를 먹어둬야 한다.

이 숲의 도토리는 하나만 먹어도 배가 부르기 때문에 겨울잠을 잘 잘 수 있다.

숲 속에 N개의 도토리가 일렬로 쭉 떨어져 있는데 맛있는 도토리도 있고 맛이 없는 도토리도 있다. 맛의 정도를 정수(-104≤정수≤104)로 나타낼 수 있다.

두 마리 다람쥐 중 한 마리는 똑똑한 다람쥐이고 다른 한 마리는 멍청한 다람쥐이다.

똑똑한 다람쥐는 맛있는 도토리만 골라 먹을 수 있다. 멍청한 다람쥐는 골라 먹을 수 없어서 임의의 위치에서 시작해서 연속해서 먹다가 임의의 위치에서 먹기를 중단 할 수 밖에 없다.

두 마리 다람쥐 모두 맛의 합이 최대가 되게 먹고 싶다.

예를 들어, 6개의 도토리가 2, -1, 2, 3, 4, -5로 주어졌을 때, 멍청한 다람쥐는 2, -1, 2, 3, 4 이렇게 도토리 5개를 연속해서 먹었을 때 맛의 합이 10으로 최대이다.

똑똑한 다람쥐는 2, 2, 3, 4 이렇게 골라먹어서 맛의 합이 11로 최대이다. 겨울잠을 자야 하므로 적어도 1개의 도토리는 반드시 먹어야 한다.

N개의 도토리가 주어졌을 때, 멍청한 다람쥐가 맛의 합이 최대가 되게 먹었을 때 값과 똑똑한 다람쥐가 맛의 합이 최대가 되게 먹었을 때 값을 찾는 프로그램을 작성하시오.
'''

import sys

sys.stdin = open("C6_input.txt")

N = int(input())

nums = list(map(int, input().split()))
smart = 0
stupid = 0

for n in nums:
    if n > 0:
        smart += n
add = 0
for start_n in range(N):
    if nums[start_n] < 0:
        continue
    for n in range(start_n, N):
        add += nums[n]
        if add <= 0:
            break
        if add > stupid:
            stupid = add
    add = 0

print(stupid, smart)