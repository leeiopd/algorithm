# 2차원 배열 A[][] 의 부분합 psum[][] 이 주어질 때,
# A[y1, x1] 과 A[y2, x2] 를 양 끝으로 갖는 부분 배열의 합을 반환한다.


# 4 4 4 2 2 2 2 2 0 0
# 4 4 4 2 2 2 2 2 0 0
# 4 4 4 2 2 2 2 2 0 0
# 3 3 3 1 1 1 1 1 0 0
# 3 3 3 1 1 1 1 1 0 0
# 3 3 3 1 1 1 1 1 0 0
# 3 3 3 1 1 1 1 1 0 0
# 3 3 3 1 1 1 1 1 0 0
# 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0

def gridSum(psum, y1, x1, y2, x2):

    # (0, 0),(x2, 0), (0, y2), (x2, y2) 사각형의 합 / 1, 2, 3, 4 영역
    ret = psum[y2][x2]

    if(y1 > 0):
        # (0, 0),(x2, 0), (0, y1-1), (x2, y1-1) 사각형의 합 제거 / 2 영역
        ret -= psum[y1-1][x2]

    if(x1 > 0):
        # (0, 0),(x1-1, 0), (0, y2), (x1-1, y2) 사각형의 합 제거 / 3 영역
        ret -= psum[y2][x1-1]

    if(y1 > 0 and x1 > 0):
        # 2번 제거된, (0, 0),(x1-1, 0), (0, y1-1), (x1-1, y1-1) 사각형의 합 추가 / 4 영역
        ret += psum[y1-1][x1-1]

    return ret  # 1 여역
